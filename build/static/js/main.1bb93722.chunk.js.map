{"version":3,"sources":["components/style/tableBody.module.scss","components/style/tableAdjustments.module.scss","components/style/selectedUser.module.scss","components/style/lazyLoad.module.scss","components/style/pagination.module.scss","components/style/loading_page.module.scss","components/style/chooseQuery.module.scss","components/style/addRow.module.scss","components/chooseQuery.jsx","components/tableRow.jsx","service/sort.jsx","components/tableAddData.jsx","components/tableSearch.jsx","components/tableUpperAdustments.jsx","components/selectedUser.jsx","components/lazyLoad.jsx","components/pagination.jsx","components/tableBody.jsx","components/loading.jsx","service/search.jsx","components/addRow.jsx","service/constructor.jsx","components/bigDataQuery.jsx","components/smallDataQuery.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChooseQuery","props","className","Class","container","nav_wrapper","to","TableRow","onClick","moreInfo","table_row","table_data","users","id","firstName","lastName","email","phone","Sort","attr","attr_two","attr_three","sort","a","b","reverse","nameA","toUpperCase","nameB","TableAddData","adjustments_btn_container","open","adjustments_btn","TableSearch","adjustments_search","adjustments_search_input","type","adjustments_search_btn","search","TableUpperAdjustments","adjustments","SelectedUser","selected","length","selected_user","selected_user_name","selected_user_description_title","selected_user_description_text","description","selected_user_adress","address","streetAddress","selected_user_city","city","selected_user_state","state","selected_user_zip","zip","LazyLoad","loader","loader__dot","Pagination","usersPerPage","totalUsers","paginate","currentPageNumb","lazyLoad","pageNumbers","i","Math","ceil","push","pageNumber","map","item","key","pagination_item_active","pagination_item","pagination","TableBody","useState","setUsers","name","surname","sortingType","handleClick","e","sorted_data","target","getAttribute","active","rows","table_container","table","value","table__head_cell","active_reverse","table_body","currentPage","moreInfoData","Loading","loading__animation_container","loading__animation_wrapper","loading__animation_text","Search","filter","toLowerCase","includes","console","log","AddRow","addData","addRow","close","addRow_close","addRow_title","onChange","validate","addRow_input","placeholder","add","isValid","addRow_btn","addRow_btn_disabled","User","this","BigData","React","necessaryElement","setElement","setAdd","loading","setLoading","setCurrentPage","setLazyLoad","useEffect","axios","get","res","data","res_two","fetchUsers","backUpCache","indexOfLastUser","indexOfFirstUser","currentUsers","slice","handleOpen","elems","document","querySelectorAll","newData","forEach","newUser","unshift","allUsers","dataToSearch","previousSibling","elementIndex","parentNode","firstChild","innerHTML","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1bb93722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"tableBody_table__Hzd0E\",\"table__head_cell\":\"tableBody_table__head_cell__2UXEv\",\"table_container\":\"tableBody_table_container__2V_SV\",\"table_row\":\"tableBody_table_row__3YsET\",\"table_data\":\"tableBody_table_data__3kpJR\",\"active\":\"tableBody_active__2L6L7\",\"active_reverse\":\"tableBody_active_reverse__1U1gv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adjustments\":\"tableAdjustments_adjustments__1rrCQ\",\"adjustments_btn\":\"tableAdjustments_adjustments_btn__1iJ9w\",\"adjustments_search\":\"tableAdjustments_adjustments_search__zaIAl\",\"adjustments_search_input\":\"tableAdjustments_adjustments_search_input__1v2Kz\",\"adjustments_search_btn\":\"tableAdjustments_adjustments_search_btn__1CiBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected_user\":\"selectedUser_selected_user__tuRlp\",\"selected_user_description_text\":\"selectedUser_selected_user_description_text__1OJDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"lazyLoad_container__2vtqr\",\"loader\":\"lazyLoad_loader__1pnv8\",\"loader__dot\":\"lazyLoad_loader__dot__2uvXP\",\"loader__text\":\"lazyLoad_loader__text__2OBWt\",\"loading-text\":\"lazyLoad_loading-text__22B91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__1MoX3\",\"pagination_item\":\"pagination_pagination_item__2AQVd\",\"pagination_item_active\":\"pagination_pagination_item_active__37EBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading__animation_container\":\"loading_page_loading__animation_container__2QMxG\",\"loading__animation_text\":\"loading_page_loading__animation_text__j6xET\",\"loading__animation_wrapper\":\"loading_page_loading__animation_wrapper__2Eqz3\",\"rolling\":\"loading_page_rolling__1vzhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chooseQuery_container__37gwy\",\"nav_wrapper\":\"chooseQuery_nav_wrapper__38QZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addRow\":\"addRow_addRow__3EGky\",\"addRow_title\":\"addRow_addRow_title__1jASF\",\"addRow_input\":\"addRow_addRow_input__1ILA5\",\"addRow_btn\":\"addRow_addRow_btn__37TmC\",\"addRow_btn_disabled\":\"addRow_addRow_btn_disabled__2HQO9\",\"addRow_close\":\"addRow_addRow_close__3yR7W\"};","import React from 'react';\nimport { NavLink} from 'react-router-dom';\nimport Class from './style/chooseQuery.module.scss';\n\nconst ChooseQuery = (props) => {\n\n  return (\n    <div className={Class.container}>\n      <div className={Class.nav_wrapper}>\n        <NavLink to=\"/big_data\">Большая база</NavLink>\n        <NavLink to=\"/small_data\">Маленькая база</NavLink>\n      </div>\n    </div>\n\n  );\n}\n\nexport default ChooseQuery;\n","import React from 'react';\nimport Class from './style/tableBody.module.scss';\n\nconst TableRow = (props) => {\n\n  return (\n    <tr onClick={props.moreInfo} className={Class.table_row}>\n      <td className={Class.table_data}>{props.users.id}</td>\n      <td className={Class.table_data}>{props.users.firstName}</td>\n      <td className={Class.table_data}>{props.users.lastName}</td>\n      <td className={Class.table_data}>{props.users.email}</td>\n      <td className={Class.table_data}>{props.users.phone}</td>\n    </tr>\n  );\n}\n\nexport default TableRow;\n","export default function Sort(attr, attr_two, attr_three) { // data, sorting type, isDescending\n\n  if (attr_two === 'id') {\n    attr.sort(function(a, b) { // sorting by id\n      return a.id - b.id;\n    })\n\n    if (attr_three === true) { // reverses the data if the sorting is descending\n      attr = attr.reverse()\n    }\n\n  } else if (attr_two === 'name') {\n    attr.sort(function(a, b) { // sorting by name\n      var nameA = a.firstName.toUpperCase();\n      var nameB = b.firstName.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    if (attr_three === true) {\n      attr = attr.reverse()\n    }\n\n  } else if (attr_two === 'surname') {\n    attr.sort(function(a, b) { // sorting by surname\n      var nameA = a.lastName.toUpperCase();\n      var nameB = b.lastName.toUpperCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      return 0;\n    });\n\n    if (attr_three === true) {\n      attr = attr.reverse()\n    }\n  }\n\n  return attr;\n}\n","import React from 'react';\nimport Class from './style/tableAdjustments.module.scss';\n\n\nconst TableAddData = (props) => {\n\n\n  return (\n    <div className={Class.adjustments_btn_container}>\n      <div onClick={ props.open } className={Class.adjustments_btn}>Добавить</div>\n    </div>);\n}\n\nexport default TableAddData;\n","import React from 'react';\nimport Class from './style/tableAdjustments.module.scss';\n\n\nconst TableSearch = (props) => {\n\n  return (\n    <div className={Class.adjustments_search}>\n      <input className={Class.adjustments_search_input} type=\"text\"/>\n      <div className={Class.adjustments_search_btn}\n        onClick={ props.search }>Поиск</div>\n    </div>);\n}\n\nexport default TableSearch;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Class from './style/tableAdjustments.module.scss';\nimport TableAddData from './tableAddData'\nimport TableSearch from './tableSearch'\n\n\nconst TableUpperAdjustments = (props) => {\n\n\n  return (\n    <div className={Class.adjustments}>\n      <TableAddData open={ props.open } />\n      <NavLink className={Class.adjustments_btn} to=\"/\">Выбрать базу</NavLink>\n      <TableSearch users={props.users} search={ props.search }/>\n    </div>);\n}\n\nexport default TableUpperAdjustments;\n","import React from 'react';\nimport Class from './style/selectedUser.module.scss';\n\n\nconst SelectedUser = (props) => {\n\n  if (props.selected.length === 0) {\n    return null;\n  }\n\n\n  return (\n        <div className={Class.selected_user}>\n          <span className={Class.selected_user_name}><strong>Выбран пользователь:</strong> {props.selected.firstName} {props.selected.lastName}</span>\n          <span className={Class.selected_user_description_title}><strong>Описание:</strong></span>\n          <div className={Class.selected_user_description_text}>{props.selected.description}</div>\n          <span className={Class.selected_user_adress}><strong>Адрес проживания: </strong>{props.selected.address.streetAddress}</span>\n          <span className={Class.selected_user_city}><strong>Город: </strong>{props.selected.address.city}</span>\n          <span className={Class.selected_user_state}><strong>Штат: </strong>{props.selected.address.state}</span>\n          <span className={Class.selected_user_zip}><strong>Индекс: </strong>{props.selected.address.zip}</span>\n        </div>);\n\n  }\n\n\nexport default SelectedUser;\n","import React from 'react';\nimport Class from './style/lazyLoad.module.scss';\n\nconst LazyLoad = (props) => {\n\n\n  return (\n    <div className={Class.container}>\n      <div className={Class.loader}>\n        <div className={Class.loader__dot}></div>\n        <div className={Class.loader__dot}></div>\n        <div className={Class.loader__dot}></div>\n        <div className={Class.loader__dot}></div>\n        <div className={Class.loader__dot}></div>\n        <div className={Class.loader__dot}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default LazyLoad;\n","import React from 'react';\nimport Class from './style/pagination.module.scss';\nimport LazyLoad from './lazyLoad'\n\nconst Pagination = ({ usersPerPage, totalUsers, paginate, currentPageNumb, lazyLoad }) => {\n\n\n\n  let pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\n    pageNumbers.push(i)\n  }\n\n  if (lazyLoad === true) {\n    return <LazyLoad />\n  }\n\n  if (totalUsers / usersPerPage < 1 ) {\n    return null;\n  }\n\n\n\n  let pageNumber = pageNumbers.map((item) => {\n    return <div key={item} onClick={ () => paginate(item) } className={item === currentPageNumb ? Class.pagination_item_active : Class.pagination_item}>{item}</div>\n  });\n\n  return (\n\n    <nav className={Class.pagination}>\n\n\n       { pageNumber }\n\n\n    </nav>\n\n  );\n}\n\nexport default Pagination;\n","import React, {useState} from 'react';\nimport Class from './style/tableBody.module.scss';\nimport TableRow from './tableRow';\nimport Sort from './../service/sort';\nimport TableUpperAdjustments from './tableUpperAdustments';\nimport SelectedUser from './selectedUser'\nimport Pagination from './pagination'\n\nconst TableBody = (props) => {\n\n  let [users, setUsers] = useState();\n  let [sortingType, setType] = useState({id: 'none', name: 'none', surname: 'none'})\n\n  let handleClick = (e) => {\n    //sorting\n    let type = e.target.getAttribute('value');\n    let sorted_data;\n    let active = sortingType;\n    if (sortingType[type] === 'ascending') {\n      sorted_data = Sort(props.users, type, true);\n    } else {\n      sorted_data = Sort(props.users, type, false);\n    }\n\n    setUsers({users: sorted_data});\n\n    for (let key in active) { //reassign default values to unnecessary elements\n      key !== type\n        ? active[key] = 'none'\n        : active[key] = active[key];\n    }\n    active[type] === 'ascending'\n      ? active[type] = 'descending'\n      : active[type] = 'ascending';\n  }\n\n  let rows = props.users.map((item, i) => {\n    return <TableRow key={i} users={item} moreInfo={props.moreInfo}/>\n  })\n\n  return (<div className={Class.table_container}>\n\n    <TableUpperAdjustments users={props.users} search={props.search} open={props.open}/>\n\n    <table className={Class.table}>\n      <thead>\n        <tr>\n          <th value='id' className={sortingType.id === 'none'\n              ? Class.table__head_cell\n              : sortingType.id === 'ascending'\n                ? Class.active\n                : Class.active_reverse} onClick={handleClick}>ID</th>\n\n          <th value='name' className={sortingType.name === 'none'\n              ? Class.table__head_cell\n              : sortingType.name === 'ascending'\n                ? Class.active\n                : Class.active_reverse} onClick={handleClick}>Имя</th>\n\n          <th value='surname' className={sortingType.surname === 'none'\n              ? Class.table__head_cell\n              : sortingType.surname === 'ascending'\n                ? Class.active\n                : Class.active_reverse} onClick={handleClick}>Фамилия</th>\n\n          <th className={Class.table__head_cell}>Email</th>\n          <th className={Class.table__head_cell}>Телефон</th>\n        </tr>\n      </thead>\n      <tbody className={Class.table_body}>\n\n        {rows}\n\n      </tbody>\n    </table>\n\n    <Pagination usersPerPage={props.usersPerPage} totalUsers={props.totalUsers} paginate={props.paginate} currentPage={props.users} currentPageNumb={props.currentPage} lazyLoad = {props.lazyLoad}/>\n\n    <SelectedUser selected={props.moreInfoData}/>\n\n  </div>);\n}\n\nexport default TableBody;\n","import React from 'react';\nimport Class from './style/loading_page.module.scss';\n\nconst Loading = (props) => {\n\n\n  return (\n\n    <div className={Class.loading__animation_container}>\n      <div className={Class.loading__animation_wrapper}>\n        <span className={Class.loading__animation_text}>Loading... Please stand by</span>\n      <div></div><div></div><div></div><div></div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Loading;\n","export default function Search(attr, attr_two, attr_three){ // data, search query\n  if (attr_two === ''){\n    attr = attr_three;\n  } else {\n    attr = attr.filter((item) => {\n      return item.firstName.toLowerCase().includes(attr_two.toLowerCase()) || item.lastName.toLowerCase().includes(attr_two.toLowerCase())\n    })\n  }\n\n  console.log(attr)\n  return attr;\n\n}\n","import React from 'react';\nimport Class from './style/addRow.module.scss';\n\nconst AddRow = (props) => {\n\n  if (props.addData === false) {\n    return null;\n  }\n\n  return (\n\n    <div className={Class.addRow}>\n      <div onClick= { props.close } className={Class.addRow_close}>&#x2715;</div>\n      <span className={Class.addRow_title}>Добавьте пользователя</span>\n      <input onChange={ props.validate } id='digitInput' className={Class.addRow_input} type=\"number\" placeholder='id'/>\n      <input onChange={ props.validate } className={Class.addRow_input} type=\"text\" placeholder='Имя'/>\n      <input onChange={ props.validate } className={Class.addRow_input} type=\"text\" placeholder='Фамилия'/>\n      <input onChange={ props.validate } className={Class.addRow_input} type=\"text\" placeholder='Эл. почта'/>\n      <input onChange={ props.validate } className={Class.addRow_input} type=\"text\" placeholder='Телефон'/>\n      <div onClick={ props.add } className={props.isValid === true ? Class.addRow_btn : Class.addRow_btn_disabled}>Добавить</div>\n    </div>\n\n  );\n}\n\nexport default AddRow;\n","export default class User {\n\n  constructor(id, firstName, lastName, email, phone) {\n    this.id = id;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.phone = phone;\n    this.address = {}\n    this.address.city = 'Moscow';\n    this.address.zip = '115419';\n    this.address.state = 'Moscow';\n    this.address.streetAddress = 'Москва, ул. Орджоникидзе, 11';\n    this.description = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad, voluptate molestias dolores.'\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport 'normalize.css';\nimport './../App.scss';\nimport axios from 'axios'\nimport TableBody from './tableBody';\nimport Loading from './loading'\nimport Search from './../service/search'\nimport AddRow from './addRow'\nimport User from './../service/constructor'\nimport Class from './style/addRow.module.scss';\n\nfunction BigData(props) {\n\n  let [users, setUsers] = React.useState([])\n  let [necessaryElement, setElement] = React.useState([])\n  let [addData, setAdd] = React.useState(false)\n  let [isValid, validate] = React.useState(false)\n  let [loading, setLoading] = React.useState(false)\n  let [currentPage, setCurrentPage] = React.useState(1)\n  let [usersPerPage, setUsersPerPage] = React.useState(40)\n  let [lazyLoad, setLazyLoad] = React.useState(true);\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setLoading(true);\n      const res = await axios.get('http://www.filltext.com/?rows=25&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}');\n      setUsers(res.data);\n      setLoading(false);\n      const res_two = await axios.get('http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\n      setUsers(res_two.data);\n      setLazyLoad(false)\n    }\n\n    fetchUsers()\n  }, [])\n\n  let backUpCache = [];\n\n  let handleSearch = (e) => {\n    let dataToSearch = e.target.previousSibling.value\n    users = Search(users, dataToSearch, backUpCache[0]);\n    setUsers(users)\n  }\n\n  //pagination\n\n  let indexOfLastUser = currentPage * usersPerPage;\n  let indexOfFirstUser = indexOfLastUser - usersPerPage;\n  let currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n  let paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n\n  }\n\n  //handlers\n\n  let handleClose = (e) => {\n    setAdd(false);\n  }\n\n  let wierdValidation = (e) => { // validation for adding new user\n    isValid = true;\n    let elems = document.querySelectorAll(`.${Class.addRow_input}`);\n    elems.forEach((item) => {\n      if (item.value === '') {\n        return isValid = false\n      }\n    })\n    isValid === true ? validate(true) : validate(false)\n  }\n\n  let handleNewUser = (e) => {\n    if (isValid) {\n      let elems = document.querySelectorAll(`.${Class.addRow_input}`);\n      let newData = [];\n      elems.forEach((item) => {\n        return newData.push(item.value)\n      })\n\n      let newUser = new User(newData[0], newData[1], newData[2], newData[3], newData[4])\n      users.unshift(newUser)\n      setUsers(users)\n      setAdd(false);\n    }\n  }\n\n  let handleOpen = (e) => {\n    setAdd(true);\n  }\n\n  let handleMoreInfo = (e) => {\n    let elementIndex = e.target.parentNode.firstChild.innerHTML\n\n    if (elementIndex == necessaryElement.id) { // closes the tab if the same row is clicked again\n      return setElement([])\n    }\n\n    users.forEach((item, i) => {\n      if (item.id == elementIndex) {\n        setElement(item);\n      }\n    });\n\n  }\n\n  return (<div className=\"App\">\n\n    <AddRow addData={addData} close={handleClose} open={handleOpen} add={handleNewUser} validate={wierdValidation} isValid={isValid}/>\n\n    { loading === false\n        ? <TableBody users={currentUsers} allUsers={users} search={handleSearch} moreInfo={handleMoreInfo} moreInfoData={necessaryElement} open={handleOpen} usersPerPage={usersPerPage} totalUsers={users.length} paginate={paginate} currentPage={currentPage} lazyLoad={ lazyLoad }/>\n        : <Loading />\n    }\n\n  </div>);\n}\n\nexport default BigData;\n","import React, {useState, useEffect} from 'react';\nimport 'normalize.css';\nimport './../App.scss';\nimport axios from 'axios'\nimport TableBody from './tableBody';\nimport Loading from './loading'\nimport Search from './../service/search'\nimport AddRow from './addRow'\nimport User from './../service/constructor'\nimport Class from './style/addRow.module.scss';\n\nfunction BigData(props) {\n\n  let [users, setUsers] = React.useState([])\n  let [necessaryElement, setElement] = React.useState([])\n  let [addData, setAdd] = React.useState(false)\n  let [isValid, validate] = React.useState(false)\n  let [loading, setLoading] = React.useState(false)\n  let [currentPage, setCurrentPage] = React.useState(1)\n  let [usersPerPage, setUsersPerPage] = React.useState(12)\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setLoading(true);\n      const res = await axios.get('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}');\n      setUsers(res.data);\n      setLoading(false);\n    }\n\n    fetchUsers()\n  }, [])\n\n  let backUpCache = [];\n\n  let handleSearch = (e) => {\n    let dataToSearch = e.target.previousSibling.value\n    users = Search(users, dataToSearch, backUpCache[0]);\n    setUsers(users)\n  }\n\n  //pagination\n\n  let indexOfLastUser = currentPage * usersPerPage;\n  let indexOfFirstUser = indexOfLastUser - usersPerPage;\n  let currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n  let paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n\n  }\n\n  //handlers\n\n  let handleClose = (e) => {\n    setAdd(false);\n  }\n\n  let wierdValidation = (e) => { // validation for adding new user\n    isValid = true;\n    let elems = document.querySelectorAll(`.${Class.addRow_input}`);\n    elems.forEach((item) => {\n      if (item.value === '') {\n        return isValid = false\n      }\n    })\n    isValid === true ? validate(true) : validate(false)\n  }\n\n  let handleNewUser = (e) => {\n    if (isValid) {\n      let elems = document.querySelectorAll(`.${Class.addRow_input}`);\n      let newData = [];\n      elems.forEach((item) => {\n        return newData.push(item.value)\n      })\n\n      let newUser = new User(newData[0], newData[1], newData[2], newData[3], newData[4])\n      users.unshift(newUser)\n      setUsers(users)\n      setAdd(false);\n    }\n  }\n\n  let handleOpen = (e) => {\n    setAdd(true);\n  }\n\n  let handleMoreInfo = (e) => {\n    let elementIndex = e.target.parentNode.firstChild.innerHTML\n\n    if (elementIndex == necessaryElement.id) { // closes the tab if the same row is clicked again\n      return setElement([])\n    }\n\n    users.forEach((item, i) => {\n      if (item.id == elementIndex) {\n        setElement(item);\n      }\n    });\n\n  }\n\n  return (<div className=\"App\">\n\n    <AddRow addData={addData} close={handleClose} open={handleOpen} add={handleNewUser} validate={wierdValidation} isValid={isValid}/>\n\n    { loading === false\n        ? <TableBody users={currentUsers} search={handleSearch} moreInfo={handleMoreInfo} moreInfoData={necessaryElement} open={handleOpen} usersPerPage={usersPerPage} totalUsers={users.length} paginate={paginate} currentPage={currentPage}/>\n        : <Loading />\n    }\n\n  </div>);\n}\n\nexport default BigData;\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport 'normalize.css';\nimport './App.scss';\nimport ChooseQuery from './components/chooseQuery.jsx'\nimport BigDataQuery from './components/bigDataQuery'\nimport SmallDataQuery from './components/smallDataQuery';\n\nfunction App(props) {\n\n  return (<div className=\"App\">\n\n  <BrowserRouter>\n    <Route exact path='/' render = { () => <ChooseQuery />} />\n    <Route path='/big_data' render = { () => <BigDataQuery />} />\n    <Route path='/small_data' render={ () => <SmallDataQuery />} />\n  </BrowserRouter>\n\n\n\n\n  </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}